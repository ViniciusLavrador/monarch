// src/pages/_app.tsx
import "../styles/globals.css";
import { withTRPC } from "@trpc/next";
import superjson from "superjson";
import { SessionProvider } from "next-auth/react";

import LoadingIndicator from "../hooks/use-loading/loading-indicator";
import useLoading from "../hooks/use-loading/use-loading";

import * as layouts from "../layouts";

import type { AppRouter } from "../server/router";
import { AppProps } from "next/app";
import React from "react";
import Head from "next/head";
import Modal from "../hooks/use-modal/modal";
import { NotificationsProvider } from "@mantine/notifications";

type AppPropsWithLayout = AppProps & {
  Component: NextPageWithLayout;
};

const BaseLayout: FCWithChildren = ({ children }) => <>{children}</>;

const MyApp = ({ Component, pageProps: { session, ...pageProps } }: AppPropsWithLayout) => {
  const { isLoading } = useLoading();

  const Layout = Component.layout ? layouts[Component.layout] : BaseLayout;

  return (
    <SessionProvider session={session}>
      <NotificationsProvider>
        <Layout>
          <>
            <Head>
              <meta name="description" content="Generated by create-t3-app" />
              <link rel="icon" href="/favicon.ico" />
            </Head>
            <Component {...pageProps} />
            <LoadingIndicator show={isLoading} />
          </>
        </Layout>
        <Modal />
      </NotificationsProvider>
    </SessionProvider>
  );
};

const getBaseUrl = () => {
  if (typeof window !== "undefined") {
    return "";
  }
  if (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}`; // SSR should use vercel url

  return `http://localhost:${process.env.PORT ?? 3000}`; // dev SSR should use localhost
};

export default withTRPC<AppRouter>({
  config({ ctx }) {
    /**
     * If you want to use SSR, you need to use the server's full URL
     * @link https://trpc.io/docs/ssr
     */
    const url = `${getBaseUrl()}/api/trpc`;

    return {
      url,
      transformer: superjson,
      /**
       * @link https://react-query.tanstack.com/reference/QueryClient
       */
      // queryClientConfig: { defaultOptions: { queries: { staleTime: 60 } } },
    };
  },
  /**
   * @link https://trpc.io/docs/ssr
   */
  ssr: false,
})(MyApp);
